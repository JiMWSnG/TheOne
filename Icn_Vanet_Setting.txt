## Default settings for the simulation### Scenario settingsScenario.name = ICN_VANETScenario.simulateConnections = trueScenario.updateInterval = 1# 43200s == 12h 86400 = 24hScenario.endTime = 86400# Define 6 different node groupsScenario.nrofHostGroups = 2## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 50# High speed, long range, interface for BShighspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 10MhighspeedInterface.transmitRange = 300## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.router = DSRRouterGroup.bufferSize = 1024MGroup.waitTime = 0,0# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Message TTL of 300 minutes (5 hours)Group.msgTtl = 60# group1 (pedestrians) specific settings#基站的groupId = BS,静止的Group1.groupID = BSGroup1.interface1 = highspeedInterfaceGroup1.bufferSize = 1024MGroup1.movementModel = MapRouteMovementGroup1.waitTime = 0, 0Group1.routeFile = basestationRoute.wktGroup1.routeType = 2Group1.speed = 0, 0Group1.nrofHosts = 247#c车辆# group2 specific settingsGroup2.groupID = CGroup2.nrofHosts = 718140Group2.nrofInit = 500Group2.bufferSize = 100MGroup2.movementModel = ExternalMovement###配置Events1.class = ICNMessageEventGenerator#    *分布类型的消息大小：   Events1.sizeDistribute   Events1.sizeParams#    *分布类型的消息间隔：   Events1.intervalDistribute  Events1.intervalParams#    *distribute的类型有：Exponential， GenelizedExtreme，LogNormal，Normal，Pareto，Weibull；##    *Exponentia指数分布：一个参数lamda;#    *GenelizedExtreme广义极值分布：三个参数alpha，beta，k;#    *LogNormal对数正态分布：两个参数alpha，beta;#    *Normal正态分布：两个参数alpha，beta;#    *Pareto帕累托分布：三个参数k, minValue, maxValue;#    *Weibull韦布尔分布：两个参数lamda， k;#    *周期性数据大小和间隔使用Events1.responseSize, Evants1.interval## Message creation parameters# How many event generatorsEvents.nrof = 7#interest 请求消息产生器#web SurfingEvents1.class = ICNMessageEventGeneratorEvents1.prefix = I_webEvents1.responseMsgName = D_webEvents1.sizeDistribute = WeibullEvents1.sizeParams = 28242.8, 0.814944#基本单位B，kB = 1k,MB = 1MEvents1.unitLocator = 1Events1.intervalDistribute = LogNormalEvents1.intervalParams = -0.495204, 2.7731Events1.typeSize = 10000Events1.hosts = 247,718387Events1.size = 100,200Events1.interval = 1,2Events1.isMsgConstant =falseEvents1.isIntervalPeriodic = false#Social NetworkEvents2.class = ICNMessageEventGeneratorEvents2.prefix = I_socialEvents2.responseMsgName = D_socialEvents2.sizeDistribute = GenelizedExtremeEvents2.sizeParams = 1.116, 121.866, 41.265Events2.unitLocator = 1Events2.intervalDistribute = ParetoEvents2.intervalParams = 0.03, 0.8875, 20.406Events2.typeSize = 10000Events2.hosts = 247,718387Events2.size = 100,200Events2.interval = 1,2Events2.isMsgConstant =falseEvents2.isIntervalPeriodic = false#Media StreamingEvents3.class = ICNMessageEventGeneratorEvents3.prefix = I_mediaEvents3.responseMsgName = D_mediaEvents3.sizeDistribute = NormalEvents3.sizeParams = 12.91, 4.28Events3.unitLocator = 1kEvents3.interval = 127,128Events3.typeSize = 10000Events3.hosts = 247,718387Events3.size = 100,200Events3.isMsgConstant =falseEvents3.isIntervalPeriodic = true#vehicleEvents4.class = ICNMessageEventGeneratorEvents4.prefix = I_vehicleEvents4.responseMsgName = D_vehicleEvents4.interval = 2,3Events4.responseSize = 807Events4.typeSize = 10Events4.hosts = 247,718387Events4.size = 100,200#trafficEvents5.class = ICNMessageEventGeneratorEvents5.prefix = I_trafficEvents5.responseMsgName = D_trafficEvents5.interval = 2,3Events5.responseSize = 99Events5.typeSize = 10Events5.hosts = 247,718387Events5.size = 100,200#Vehicle diagnostics and maintenanceEvents6.class = ICNMessageEventGeneratorEvents6.prefix = I_vehicle2Events6.responseMsgName = D_vehicle2Events6.intervalDistribute =  NormalEvents6.intervalParams = 1000,200Events6.responseSize = 140Events6.typeSize = 10Events6.hosts = 247,718387Events6.size = 100,200Events6.interval = 1,1Events6.isMsgConstant = trueEvents6.isIntervalPeriodic = false#Accident reportEvents7.class = ICNMessageEventGeneratorEvents7.prefix = I_accidentEvents7.responseMsgName = D_accidentEvents7.interval = 14400,14401Events7.responseSize = 124Events7.typeSize = 10Events7.hosts = 247,718387Events7.size = 100,200## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 29476,32314# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000ExternalMovement.file = koln.trExternalMovement.nrofPreload = 500## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 1MapBasedMovement.mapFile1 = basestationMap.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 5# length of the warm up period (simulated seconds)Report.warmup = 1000# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = MessageStatsReportReport.report2 = TrafficReportReport.report3 = TrafficReportReport.report4 = TrafficReportReport.report5 = TrafficReportTrafficReport.interval = 1TrafficReport.host = BS1,BS2,BS3,BS4## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$